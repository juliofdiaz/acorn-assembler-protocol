{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About the CGPS Assembler app","text":"<p>The team at the Centre for Genomic Pathogen Surveillance has designed this application to offer a user-friendly genome assembly workflow. This process includes implementing quality control measures on the raw sequencing data to optimize it for assembly. Subsequently, the application utilizes the <code>Spades</code> assembler and gathers quality metrics throughout the workflow. These metrics are then presented alongside the final assembly in <code>fasta</code> format.</p>"},{"location":"assembling/","title":"DES Assembler protocol","text":"<p>v 1.0.0</p> <p>In this page, we will describe the standard workflow to assemble a bacterial genome taking in illumina paired-end reads in <code>fastq</code> format.</p>"},{"location":"assembling/#1-setting-up","title":"1. Setting up","text":"<p>To run the DES Assembler app, your computer requires:</p> <ul> <li>Docker Desktop installed on your computer.</li> <li>The DES Assembler app installed on your computer.</li> </ul>"},{"location":"assembling/#running-docker-desktop","title":"Running Docker Desktop","text":"<p>If Docker Desktop is currently active, you'll notice the Docker logo icon  displayed in your taskbar.</p> <p></p> <p>If you suspect that Docker Desktop isn't running, simply double-click on the Docker icon  on ypur desktop. This action will initiate and activate Docker in the background. </p>"},{"location":"assembling/#running-the-assembler-app","title":"Running the assembler app","text":"<p>If the DES Assembler app is already active, you'll notice its icon  displayed in your desktop taskbar.</p> <p></p> <p>or in your system tray.</p> <p></p> <p>If you suspect that the DES Assembler app isn't running, simply double-click on the DES Assembler app icon  on your desktop. This will launch the DES Assembler app.</p>"},{"location":"assembling/#2-selecting-files-for-assembly","title":"2. Selecting Files for Assembly","text":"<p>Your computer is now ready to start assembling genomes. This step requires two paired <code>fastq</code> files from an illumina sequencing experiment per genome. When you move these two files to the designated folder, the DES Assembler app will detect them and start the assembly process. Once the assembly process is finalized, you will have access to the assembled data in <code>fasta</code> format, along with its corresponding quality metrics file.</p>"},{"location":"assembling/#open-the-des-assembler-app","title":"Open the DES Assembler app","text":"<p>Click on the DES Assembler app icon  in your taskbar.</p> <p></p> <p>This will bring the DES Assembler app app to the front, and it should look like this.</p> <p></p>"},{"location":"assembling/#drag-and-drop-files-for-assembly","title":"Drag and drop files for assembly","text":"<p>Warning</p> <p>Your paired <code>fastq</code> file should end in one of the following formats:</p> <ul> <li><code>{ID}_L001_R1_001.fastq.gz</code> and <code>{ID}_L001_R2_001.fastq.gz</code></li> </ul> <p>Open the designated input folder by clicking on the folder icon  in the DES Assembler app. This will open the designated input folder. </p> <p>Important</p> <p>You can change the input folder clicking on the settings icon , and changing the directory in the <code>input folder</code> field. Finally, click on Save.</p> <p> </p> <p>Select the <code>fastq</code> files from the genomes you would like to assemble and move them to that designated folder. The DES Assembler app will detect the files in the input directory and start the assembly process.</p>"},{"location":"assembling/#3-assembly-progress","title":"3. Assembly progress","text":"<p>The DES Assembler app will identify any new files within the input directory. These files will appear in the app labeled with the name preceding the <code>_</code> character. For instance, if your input files are named <code>bacteria_1.fastq.gz</code> and <code>bacteria_2.fastq.gz</code>, then the app will display the input genomic data as <code>bacteria</code>.</p> <p>Each genome will be assigned one of the followwing status:</p> <ul> <li><code>UNPAIRED</code> : The app has detected only one of the two paired <code>fastq</code> files</li> </ul> <p>Tip</p> <p>If you think you have moved both <code>fastq</code> files to the input directory, make sure the name of both files is identical. For example, <code>salmonella_1.fastq.gz</code> and <code>salmonela_2.fastq.gz</code> will be detected by the app as two different genomes: <code>salmonella</code> and <code>salmonela</code>, and they will both have the <code>UNPAIRED</code> status.</p> <ul> <li><code>PENDING</code> : The app is currently running the maximum number of concurrent jobs it is allow to run. An entry with a <code>PENDING</code> status is in the queue and will start as <code>RUNNING</code> jobs move to the <code>FINISHED</code> or <code>FAILED</code> status.</li> </ul> <p>Note</p> <p>You can modify the maximum number of concurrent jobs the app can run by clicking on the settings icon  and changing the number in the <code>Number of concurrent jobs</code> field. Finally, click on Save.</p> <p> </p> <ul> <li><code>RUNNING</code> : The assembly process of the genomes with this status is currently ongoing and will move to the <code>FINISHED</code> or <code>FAILED</code> status.</li> <li><code>FAILED</code> : There has been an unexpected error, and the process has not produced an assembly.</li> <li><code>FINISHED</code> : The assembly process has completed succesfully.</li> </ul>"},{"location":"assembling/#4-finished-assembly","title":"4. <code>FINISHED</code> Assembly","text":"<p>Once the assembly process has successfully concluded with the <code>FINISHED</code> status, you can access the assembly in <code>fasta</code> format and its accompanying quality metrics file by clicking on the corresponding label in the DES assembly app. This will open a folder labelled with the same name as the job in the app. This folder will contain two files:</p> <ul> <li><code>sample.fasta</code> : the resulting assembly in <code>fasta</code> format</li> <li><code>stats</code> : the quality metrics collected through the assembly process in <code>json</code> format.</li> </ul> <p>Important</p> <p>You can change the output folder clicking on the settings icon , and changing the directory in the <code>output folder</code> field. Finally, click on Save.</p> <p> </p>"},{"location":"assembling/#5-failed-assembly","title":"5. <code>FAILED</code> Assembly","text":"<p>If your genome displays the <code>FAILED</code> status, then the assembly did not complete as expected. Clicking on the corresponding label in the DES assembly app will show the log of the assembly process.</p> <p></p> <p>These logs will contain important information regarding the assembly workflow of this genome. This details will prove invaluable in pinpointing the cause of any failure and devising potential solutions.</p> <p>Tip</p> <p>You can see the log of any job, unless it has the <code>UNPAIRED</code> status, by clicking on <code>...</code> at the right end of each genome detected by the app.</p>"},{"location":"installation/","title":"Install DES Assembler App on Windows","text":""},{"location":"installation/#1-prerequisites","title":"1. Prerequisites","text":"<ul> <li>The following files are provided by DES.</li> <li>Assembler app compressed file <code>assembler-win32-x64.zip</code>.</li> <li>Docker image <code>assembly.tar.gz</code> file</li> <li>Docker engine for windows. E.g: https://docs.docker.com/desktop/install/windows-install/</li> </ul>"},{"location":"installation/#2-installation","title":"2. Installation","text":"<ul> <li>Create a folder to place all the files provided by DES. E.g. <code>assembler</code> </li> <li>Unzip the assembler executable <code>assembler-win32-x64.zip</code> file in the <code>assembler</code> folder</li> <li>Start the Docker Desktop application.</li> <li>Double Click the executable file <code>assembler.exe</code></li> </ul> <ul> <li>You will be prompted to <code>Load Image</code>. Click on it and choose the assembly.tar.gz provided by DES.</li> </ul> <ul> <li>A Loading modal will pop up. It takes around 5 minutes to load the image. Once the image is loaded the app will start automatically.</li> </ul>"},{"location":"tech/","title":"Assembly pipeline","text":""},{"location":"tech/#workflow-process","title":"Workflow process","text":"<p>The workflow consists of the following steps</p> <ol> <li>QC reads using <code>FastQC</code> before trimming</li> <li>Trim reads using trimmomatic (dynamic MIN_LEN based on 30% of the read length)</li> <li>QC reads using <code>FastQC</code> after trimming</li> <li>Check for contamination using <code>confindr</code></li> <li>Count number of reads and estimate genome size using <code>Mash</code></li> <li>Downsample reads</li> <li>Merge reads using <code>Flash</code> where the insert size is small</li> <li>Assemble reads using <code>SPAdes</code></li> <li>Assess species identification using <code>bactinspector</code></li> <li>Assess assembly quality using <code>Quast</code></li> <li>Summarise QC metrics with <code>QuailFyr</code></li> </ol>"},{"location":"tech/#software-used-within-the-workflow","title":"Software used within the workflow","text":"<ul> <li>FastQC A quality control tool for high throughput sequence data.</li> <li>Trimmomatic A flexible read trimming tool for Illumina NGS data.</li> <li>Cutadapt Finds and removes adapter sequences, primers, poly-A tails and other types of unwanted sequence from high-throughput sequencing reads</li> <li>mash Fast genome and metagenome distance estimation using MinHash.</li> <li>lighter Fast and memory-efficient sequencing error corrector.</li> <li>seqtk A fast and lightweight tool for processing sequences in the FASTA or FASTQ format.</li> <li>FLASH (Fast Length Adjustment of SHort reads) A very fast and accurate software tool to merge paired-end reads from next-generation sequencing experiments.</li> <li>SPAdes A genome assembly algorithm designed for single cell and multi-cells bacterial data sets.</li> <li>contig-tools A utility Python package to parse multi fasta files resulting from de novo assembly.</li> <li>Quast A tool to evaluate the aulaity of genome assemblies.</li> <li>ConFindr Software that can detect contamination in bacterial NGS data, both between and within species.</li> <li>QualiFyr Software to give an overall QC status for a sample based on multiple QC metric files</li> <li>MultiQC Aggregate results from bioinformatics analyses across many samples into a single report</li> <li>KAT The K-mer Analysis Toolkit (KAT) contains a number of tools that analyse and compare K-mer spectra</li> <li>BactInspector Software using an updated refseq mash database to predict species</li> </ul>"}]}